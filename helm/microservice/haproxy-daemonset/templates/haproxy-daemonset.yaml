{{- $restype := .Values.type }}
{{- $searchPath := ":global.kolla.haproxy.daemonset:global.kolla.haproxy.all:global.kolla.all" }}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "haproxy" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $resourceName := "haproxy" }}
{{- $netHostTrue := true }}
{{- $podTypeBootstrap := false }}
{{- $kollaKubernetesExternalVIP := include "kolla_val_get_str" (dict "key" "kolla_kubernetes_external_vip" "searchPath" $searchPath "Values" .Values ) }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: haproxy
  labels:
    component: haproxy
    system: haproxy
spec:
  template:
    metadata:
      labels:
        component: haproxy
        system: haproxy
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: True
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
      initContainers:
{{- include "common_dependency_container" $env | indent 8 }}
        - name: initialize-haproxy
          image: {{ $imageFull | quote }}
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          command:
            - sh
            - -xec
            - |
              cp -a /srv/configmap/..data/* /srv/pod-main-config/;
              cat /srv/pod-main-config/haproxy.conf;
          volumeMounts:
            - name: haproxy-configmap
              mountPath: /srv/configmap
            - name: pod-main-config
              mountPath: /srv/pod-main-config
            - name: host-var-lib-kk
              mountPath: /var/lib/kolla-kubernetes
      containers:
        - image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          name: main
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  kill -HUP $(</var/run/haproxy.pid);
          securityContext:
            privileged: true
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ $containerConfigDirectory }}
              name: pod-main-config
            - mountPath: /var/run
              name: haproxy-run
            - mountPath: /lib/modules
              name: host-lib-modules
              readOnly: true
{{- include "common_containers" . | indent 8 }}
      volumes:
{{- include "common_volumes" . | indent 8 }}
        - name: pod-main-config
          emptyDir: {}
        - name: haproxy-run
          hostPath:
            path: /var/run
        - name: host-lib-modules
          hostPath:
            path: /lib/modules
        - name: haproxy-configmap
          configMap:
            name: haproxy
        - name: host-var-lib-kk
          hostPath:
            path: /var/lib/kolla-kubernetes
{{- end }}
