{{- $replicas := .Values.replicas | default "1" }}
{{- $svcName := .Values.svc_name | default "registry" }}
{{- $initLoad := .Values.initial_load | default false }}
{{- $distro := .Values.distro | default "centos" }}
{{- $type := .Values.type | default "source" }}
{{- $branch := .Values.branch | default "master" }}
{{- $nodePort := .Values.node_port | default "30400" }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-registry-v0
spec:
  replicas: {{ $replicas }} 
  template:
    metadata:
      labels:
        service: {{ $svcName }}
    spec:
      initContainers:
      - name: init-myservice
        image: centos:latest
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -ec
          - |
{{- if $initLoad }}
            fn='{{ $distro }}-{{ $type }}-registry-{{ $branch }}.tar.gz';
            echo $fn;
            curl http://tarballs.openstack.org/kolla/images/$fn | tar -C /var/lib/registry/ -xzvf -;
{{- end }}
            echo Registry is all ready serving images...;
        volumeMounts:
        - name: image-store
          mountPath: /var/lib/registry
      containers:
      - name: registry
        image: registry:2
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
        env:
        - name: REGISTRY_HTTP_ADDR
          value: ":4000"
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: "/var/lib/registry"
        volumeMounts:
        - name: image-store
          mountPath: /var/lib/registry
        ports:
        - containerPort: 4000 
          name: registry
          protocol: TCP
      volumes:
      - name: image-store
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kube-registry
spec:
  selector:
    service: {{ $svcName }}
  ports:
  - name: registry
    port: 4000 
    protocol: TCP
    nodePort: {{ $nodePort }}
  type: NodePort
---
