{{- $rabbitmqImageBuilt := printf "%s/%s/%s-%s-rabbitmq:%s" .Values.docker_registry .Values.docker_namespace .Values.kolla_base_distro .Values.kolla_install_type .Values.rabbitmq_image_tag | default .Values.kolla_tag }}
{{- $rabbitmqImageFull := .Values.rabbitmq_image_full | default $rabbitmqImageBuilt }}
{{- $resourceName := "rabbitmq" }}
{{- $elementName := .Values.element_name | default $resourceName }}
{{- $searchPath := printf ":global.kolla.%s.statefulset:global.kolla.%s.all:global.kolla.rabbitmq.statefulset:global.kolla.rabbitmq.all:global.kolla.all" $elementName $elementName }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: apps/v1beta1
kind: StatefulSet
spec:
  serviceName: {{ $elementName }}
  replicas: 1
  template:
    metadata:
      labels:
        service: {{ $elementName }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
{{- include "common_dependency_container_multi" $env | indent 10 }}
          {
              "name": "update-config",
              "image": "{{ include "kolla_toolbox_image_full" . }}",
              "imagePullPolicy": {{ .Values.image_pull_policy | quote }},
              "command": [
                  "/bin/sh",
                  "-c",
                  "cp -a /srv/configmap/..data/* /srv/pod-main-config/;
                   sed -i ''/^export ERL_EPMD_ADDRESS=0.0.0.0$/d'' /srv/pod-main-config/rabbitmq-env.conf;"
              ],
              "volumeMounts": [
                  {
                      "name": "rabbitmq-config",
                      "mountPath": "/srv/configmap"
                  },
                  {
                      "name": "pod-main-config",
                      "mountPath": "/srv/pod-main-config"
                  }
              ]
          }
      ]'
    spec:
      nodeSelector:
          {{ .Values.selector_key }}: {{ .Values.selector_value | quote }}
      containers:
        - image: "{{ $rabbitmqImageFull }}"
          name: main
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ .Values.container_config_directory }}
              name: pod-main-config
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-persistent-storage
          env:
{{- include "common_env_vars" $env | indent 12 }}
          ports:
            - containerPort: {{ .Values.rabbitmq_port | default 5672 }}
              name: {{ $elementName }}
            - containerPort: {{ .Values.rabbitmq_management_port | default 15672 }}
              name: {{ $elementName }}-mgmt
{{- include "common_containers" $env | indent 8 }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: pod-main-config
          emptyDir: {}
        - name: rabbitmq-config
          configMap:
            name: {{ $elementName }}
        - name: rabbitmq-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $elementName }}
metadata:
   name: {{ $elementName }}
{{- end }}
