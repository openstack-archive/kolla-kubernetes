{{- $resourceName := "rabbitmq-bootstrap" }}
{{- $elementSearchPath := ":global.kolla.rabbitmq.init_element:global.kolla.rabbitmq.all:global.kolla.all:global" }}
{{- $elementName := include "kolla_val_get_str" (dict "key" "element_name" "searchPath" $elementSearchPath "Values" .Values ) }}
{{- $searchPath := printf ":global.kolla.%s.init_element.job:global.kolla.%s.init_element.all:global.kolla.%s.all:global.kolla.rabbitmq.init_element.job:global.kolla.rabbitmq.init_element.all:global.kolla.rabbitmq.all:global.kolla.all" $elementName $elementName $elementName }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := true }}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "rabbitmq" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $cookie := include "kolla_val_get_str" (dict "key" "cookie" "searchPath" $searchPath "Values" .Values ) }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: batch/v1
kind: Job
spec:
  template:
{{- include "init_container_header" $env | indent 4 }}
{{- include "common_dependency_container_single" $env | indent 10 }}
{{- include "init_container_tail" $env | indent 4 }}
    spec:
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
      containers:
        - image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          name: main
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ $containerConfigDirectory }}
              name: rabbitmq-config
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-persistent-storage
          env:
{{- include "common_bootstrap_env_vars" $env | indent 12 }}
            - name: RABBITMQ_CLUSTER_COOKIE
              value: {{ $cookie | quote }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: rabbitmq-config
          configMap:
            name: {{ $elementName }}
        - name: rabbitmq-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $elementName }}
      restartPolicy: OnFailure
metadata:
  name: {{ $elementName }}-init-element
{{- end }}
