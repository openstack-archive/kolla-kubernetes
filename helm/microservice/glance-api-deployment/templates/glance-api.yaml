{{- $searchPath := ":global.kolla.glance.api.deployment:global.kolla.glance.api.all:global.kolla.glance.all:global.kolla.all" }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $replicas := include "kolla_val_get_str" (dict "key" "replicas" "searchPath" $searchPath "Values" .Values ) }}
{{- $port := include "kolla_val_get_str" (dict "key" "port" "searchPath" $searchPath "Values" .Values ) }}
{{- $pvcName := include "kolla_val_get_str" (dict "key" "pvc_name" "searchPath" $searchPath "Values" .Values ) }}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "glance-api" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $localVals := dict }}
{{- $c1 := dict "key" "ceph_backend" "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c1 "retDict" $localVals }}
{{- $_ := set $c1 "retKey" "ceph_backend" }}
{{- $_ := include "kolla_val_get_raw" $c1 }}
{{- $c := dict "searchPath" .searchPath "key" "haproxy_python_termination" "retDict" $localVals "retKey" "haproxy" "Values" .Values }}
{{- include "kolla_val_get_raw" $c }}
{{- $resourceName := "glance-api" }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- $serviceName := "glance" }}
{{- $serviceType := "api" }}
{{- $configListenHostParameter := "bind_host" }}
{{- $configListenPortParameter := "bind_port" }}
{{- $portName := "glance-api" }}
{{- $checkPath := "/healthcheck" }}
{{- $privileged := false }}
{{- $gracePeriodSeconds := include "kolla_val_get_str" (dict "key" "grace_period_seconds" "searchPath" $searchPath "Values" .Values ) }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: {{ $resourceName }}
spec:
  replicas: {{ $replicas }}
  strategy:
{{- if $localVals.ceph_backend }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
{{- else }}
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
    type: RollingUpdate
{{- end }}
  template:
    metadata:
      labels:
        service: {{ $serviceName }}
        type: {{ $serviceType }}
      annotations:
{{- if $localVals.ceph_backend }}
        kolla_upgrade: minor_rolling_safe
{{- end }}
        pod.alpha.kubernetes.io/init-containers: '[
{{- include "common_dependency_container_multi" $env | indent 10 }}
          {
              "name": "update-config",
              "image": {{ include "kolla_toolbox_image_full" . | quote }},
              "imagePullPolicy": {{ $imagePullPolicy | quote }},
              "command": [
                  "/bin/sh",
                  "-c",
                  "cp -a /srv/configmap/..data/* /srv/pod-main-config/;
{{- if $localVals.ceph_backend }}
                   cp -a /srv/ceph.conf /srv/pod-main-config/;
                   cp -a /srv/ceph.client.glance.keyring /srv/pod-main-config/;
{{- end }}
{{- if $localVals.haproxy }}
                   CONF=/srv/pod-main-config/glance-api.conf;
                   crudini --set $CONF DEFAULT bind_host 127.0.0.1;
                   crudini --set $CONF DEFAULT bind_port 8080;
{{- end }}
              "],
              "volumeMounts": [
{{- if $localVals.ceph_backend }}
                  {
                      "name": "ceph-conf",
                      "mountPath": "/srv/ceph.conf",
                      "subPath": "ceph.conf"
                  },
                  {
                      "name": "ceph-client-glance-keyring",
                      "mountPath": "/srv/ceph.client.glance.keyring",
                      "subPath": "ceph.client.glance.keyring"
                  },
{{- end }}
                  {
                      "name": "service-configmap",
                      "mountPath": "/srv/configmap"
                  },
                  {
                      "name": "pod-main-config",
                      "mountPath": "/srv/pod-main-config"
                  }
              ]
          }
      ]'
    spec:
{{- if $localVals.ceph_backend }}
      hostPID: True
{{- end }}
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
#You've got 2 days to drain or figure out why it won't.
{{- if $localVals.haproxy }}
      terminationGracePeriodSeconds: {{ $gracePeriodSeconds }}
{{- end }}
      containers:
{{- if $localVals.haproxy }}
        - name: haproxy
          image: {{ include "haproxy_image_full" . | quote }}
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          command:
          - /bin/bash
          - -c
          - |
            kolla_start;
            touch /var/lib/kolla-kubernetes/event/shutdown;
          readinessProbe:
            httpGet:
              path: {{ $checkPath }}
              port: {{ $port }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
#FIXME move script into haproxy container
#NOTE this only works if you arn't doing a haproxy reconfigure too.
#But shouldn't ever have to do that in a setup like this.
                command:
                - /bin/bash
                - -c
                - |
                  kill -USR1 $(</var/run/haproxy.pid);
                  while true; do sleep 1000; done
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: /var/lib/kolla-kubernetes/event
              name: kolla-kubernetes-events
            - mountPath: {{ $containerConfigDirectory }}
              name: haproxy-config
          env:
{{- include "common_env_vars" $env | indent 12 }}
          ports:
            - containerPort: {{ $port }}
              name: {{ $portName | trunc 15 | quote }}
{{- end }}
        - name: main
          image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
{{- if $localVals.haproxy }}
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - while true; do sleep 1; [ -f /var/lib/kolla-kubernetes/event/shutdown ] && break; done
{{- end }}
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: /var/lib/kolla-kubernetes/event
              name: kolla-kubernetes-events
            - mountPath: {{ $containerConfigDirectory }}
              name: pod-main-config
{{- if not $localVals.ceph_backend }}
            - mountPath: /var/lib/glance/
              name: glance-persistent-storage
{{- end }}
          env:
{{- include "common_env_vars" $env | indent 12 }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: kolla-kubernetes-events
          emptyDir: {}
        - name: pod-main-config
          emptyDir: {}
        - name: service-configmap
          configMap:
            name: {{ $resourceName }}
{{- if $localVals.haproxy }}
        - name: haproxy-config
          configMap:
            name: glance-api-haproxy
{{- end }}
{{- if not $localVals.ceph_backend }}
        - name: glance-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $pvcName }}
{{- else }}
        - name: ceph-conf
          configMap:
            name: ceph-conf
        - name: ceph-client-glance-keyring
          secret:
            secretName: ceph-client-glance-keyring
{{- end }}
{{- end }}
