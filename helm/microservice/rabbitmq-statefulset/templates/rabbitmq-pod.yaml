{{- $resourceName := "rabbitmq" }}
{{- $elementSearchPath := ":global.kolla.rabbitmq.statefulset:global.kolla.rabbitmq.all:global.kolla.all:global" }}
{{- $elementName := include "kolla_val_get_str" (dict "key" "element_name" "searchPath" $elementSearchPath "Values" .Values ) }}
{{- $searchPath := printf ":global.kolla.%s.statefulset:global.kolla.%s.statefulset.all:global.kolla.%s.all:global.kolla.rabbitmq.statefulset:global.kolla.rabbitmq.statefulset.all:global.kolla.rabbitmq.all:global.kolla.all" $elementName $elementName $elementName }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "rabbitmq" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $port := include "kolla_val_get_str" (dict "key" "port" "searchPath" $searchPath "Values" .Values ) }}
{{- $mgmt_port := include "kolla_val_get_str" (dict "key" "mgmt_port" "searchPath" $searchPath "Values" .Values ) }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: apps/v1beta1
kind: StatefulSet
spec:
  serviceName: {{ $elementName }}
  replicas: 1
  template:
    metadata:
      labels:
        service: {{ $elementName }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
{{- include "common_dependency_container_multi" $env | indent 10 }}
          {
              "name": "update-config",
              "image": "{{ include "kolla_toolbox_image_full" . }}",
              "imagePullPolicy": {{ $imagePullPolicy | quote }},
              "command": [
                  "/bin/sh",
                  "-c",
                  "cp -a /srv/configmap/..data/* /srv/pod-main-config/;
                   sed -i ''/^export ERL_EPMD_ADDRESS=0.0.0.0$/d'' /srv/pod-main-config/rabbitmq-env.conf;"
              ],
              "volumeMounts": [
                  {
                      "name": "rabbitmq-config",
                      "mountPath": "/srv/configmap"
                  },
                  {
                      "name": "pod-main-config",
                      "mountPath": "/srv/pod-main-config"
                  }
              ]
          }
      ]'
    spec:
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
      containers:
        - image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          name: main
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ $containerConfigDirectory }}
              name: pod-main-config
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-persistent-storage
          env:
{{- include "common_env_vars" $env | indent 12 }}
          ports:
            - containerPort: {{ $port }}
              name: {{ $elementName | trunc 15 | quote }}
            - containerPort: {{ $mgmt_port }}
              name: "{{ $elementName | trunc 10 }}-mgmt"
{{- include "common_containers" $env | indent 8 }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: pod-main-config
          emptyDir: {}
        - name: rabbitmq-config
          configMap:
            name: {{ $elementName }}
        - name: rabbitmq-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $elementName }}
metadata:
   name: {{ $elementName }}
{{- end }}
