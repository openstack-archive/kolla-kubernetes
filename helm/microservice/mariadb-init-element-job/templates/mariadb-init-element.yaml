{{- $resourceName := "mariadb-bootstrap" }}
{{- $elementSearchPath := ":global.kolla.mariadb.init_element.job:global.kolla.mariadb.all:global.kolla.all:global" }}
{{- $elementName := include "kolla_val_get_str" (dict "key" "element_name" "searchPath" $elementSearchPath "Values" .Values ) }}
{{- $searchPath := printf ":global.kolla.%s.init_element.job:global.kolla.%s.init_element.all:global.kolla.%s.all:global.kolla.mariadb.init_element.job:global.kolla.mariadb.init_element.all:global.kolla.mariadb.all:global.kolla.all" $elementName $elementName $elementName }}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "mariadb" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := true }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: batch/v1
kind: Job
spec:
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "name": "fix-permissions",
              "image": "{{ $imageFull }}",
              "imagePullPolicy": {{ $imagePullPolicy | quote }},
              "securityContext": {
                  "runAsUser": 0
              },
              "command": [
                  "/bin/sh",
                  "-xec",
                  " e=$(ls -A /var/lib/mysql | grep -v lost+found | wc -l);
                    if [ $e -eq 0 -o $e -eq 1 ]; then
                       chown -R mysql: /var/lib/mysql;
                       chmod 755 /var/lib/mysql;
                    fi;
                    ls -l /var/lib/mysql;
              "],
              "volumeMounts": [
{{- if $persistent }}
                  {
                      "name": "mariadb-persistent-storage",
                      "mountPath": "/var/lib/mysql"
                  }
{{- end }}
              ]
          }
      ]'
    spec:
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
      containers:
        - image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          name: main
          command:
            - /bin/bash
            - -xec
            - |
              [ -d /var/lib/mysql/lost+found ] && rmdir /var/lib/mysql/lost+found
              kolla_start
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ $containerConfigDirectory }}
              name: mariadb-config
            - mountPath: /var/lib/mysql
              name: mariadb-persistent-storage
          env:
{{- include "common_bootstrap_env_vars" . | indent 12 }}
            - name: DB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-password
                  key: password
      volumes:
{{- include "common_volumes" . | indent 8 }}
        - name: mariadb-config
          configMap:
            name: {{ $elementName }}
        - name: mariadb-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $elementName }}
      restartPolicy: OnFailure
metadata:
  name: {{ $elementName }}-init-element
{{- end }}
