{{- $memcachedImageBuilt := printf "%s/%s/%s-%s-memcached:%s" .Values.docker_registry .Values.docker_namespace .Values.kolla_base_distro .Values.kolla_install_type .Values.memcached_image_tag | default .Values.kolla_tag }}
{{- $memcachedImageFull := .Values.memcached_image_full | default $memcachedImageBuilt }}
{{- $resourceName := "memcached" }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- $name :=  .Release.Name }}
{{- $serviceName := "memcached" }}
{{- $serviceType := "deployment" }}
{{- $elementName := .Values.element_name | default $serviceName }}
{{- $elementType := $serviceType }}
{{- $elementNameValues := index .Values.global.kolla $elementName | default dict }}
{{- $elementTypeValues := index $elementNameValues $elementType | default dict }}
{{- $elementAllValues := index $elementNameValues "all" | default dict }}
{{- $serviceNameValues := index .Values.global.kolla.all $serviceName | default dict }}
{{- $serviceTypeValues := index $serviceNameValues $elementType | default dict }}
{{- $serviceAllValues := index $serviceNameValues "all" | default dict }}
{{- $localVals := dict }}
{{- if and (hasKey $serviceAllValues "enabled") (ne (typeOf $serviceAllValues.enabled) "<nil>") }}{{- $_ := set $localVals "enabled" $serviceAllValues.enabled }} {{- end }}
{{- if and (hasKey $serviceTypeValues "enabled") (ne (typeOf $serviceTypeValues.enabled) "<nil>") }}{{- $_ := set $localVals "enabled" $serviceTypeValues.enabled }} {{- end }}
{{- if and (hasKey $elementAllValues "enabled") (ne (typeOf $elementAllValues.enabled) "<nil>") }}{{- $_ := set $localVals "enabled" $elementAllValues.enabled }} {{- end }}
{{- if and (hasKey $elementTypeValues "enabled") (ne (typeOf $elementTypeValues.enabled) "<nil>") }}{{- $_ := set $localVals "enabled" $elementTypeValues.enabled }} {{- end }}
{{- if and (hasKey .Values "enabled") (ne (typeOf .Values.enabled) "<nil>") }}{{- $_ := set $localVals "enabled" .Values.enabled }} {{- end }}
{{- $enabled := $localVals.enabled }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values }}
{{- if $enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: {{ .Values.element_name }}
spec:
  replicas: {{ .Values.memcached_replicas }}
  template:
    metadata:
      labels:
        service: {{ .Values.element_name }}
    spec:
      nodeSelector:
        {{ .Values.selector_key }}: {{ .Values.selector_value | quote }}
      containers:
        - image: "{{ $memcachedImageFull }}"
          name: main
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
            - mountPath: {{ .Values.container_config_directory }}
              name: memcached-config
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
          ports:
            - containerPort: {{ .Values.memcached_port }}
              name: {{ .Values.element_name }}
{{- include "common_containers" $env | indent 8 }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: memcached-config
          configMap:
            name: {{ .Values.element_name }}
{{- end }}
{{- end }}
