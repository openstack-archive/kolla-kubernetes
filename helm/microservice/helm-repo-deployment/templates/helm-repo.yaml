{{- $searchPath := ":global.kolla.helm-repo.deployment:global.kolla.helm-repo.all:global.kolla.all" }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $replicas := include "kolla_val_get_str" (dict "key" "replicas" "searchPath" $searchPath "Values" .Values ) }}
{{- $port := include "kolla_val_get_str" (dict "key" "port" "searchPath" $searchPath "Values" .Values ) }}
{{- $address := include "kolla_val_get_str" (dict "key" "address" "searchPath" $searchPath "Values" .Values ) }}
{{- $pvcName := include "kolla_val_get_str" (dict "key" "pvc_name" "searchPath" $searchPath "Values" .Values ) }}
{{- $persistent := include "kolla_val_get_str" (dict "key" "persistent" "searchPath" $searchPath "Values" .Values ) }}
{{- $method := include "kolla_val_get_str" (dict "key" "method" "searchPath" $searchPath "Values" .Values ) }}
{{- $url :=  include "kolla_val_get_str" (dict "key" "url" "searchPath" $searchPath "Values" .Values )}}
{{- $c := dict "searchPath" $searchPath "Values" .Values }}
{{- $_ := set $c "contName" "helm-repository" }}
{{- $_ := set $c "imageName" "image_full" }}
{{- $_ := set $c "tagName" "image_tag" }}
{{- $imageFull := include "kolla_build_image_full" $c }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $resourceName := "helm-repo" }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- $serviceName := "helm-repo" }}
{{- $portName := "helm-repo" }}
{{- $privileged := false }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: {{ $resourceName }}
spec:
  replicas: {{ $replicas }}
  template:
    metadata:
      labels:
        service: {{ $serviceName }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "name": "fix-permissions",
              "image": "{{ $imageFull }}",
              "imagePullPolicy": {{ $imagePullPolicy | quote }},
              "securityContext": {
                  "runAsUser": 0
              },
              "command": [
                  "/bin/sh",
                  "-c",
                  " if [ ! $(ls -A /helm-repo) ]; then
                       chown -R helm: /helm-repo;
                       chmod 755 /helm-repo;
                    fi;
              "],
              "volumeMounts": [
{{- if $persistent }}
                  {
                      "name": "helm-repo-persistent-storage",
                      "mountPath": "/helm-repo"
                  }
{{- end }}
              ]
          },
          {
              "name": "prepare-repo",
              "image": "{{ $imageFull }}",
              "imagePullPolicy": {{ $imagePullPolicy | quote }},
              "command": [
                  "/bin/sh",
                  "-c",
                  " if [ ! $(ls -A /helm-repo) ]; then
                       pushd /tmp;
                       if [ ''x{{ $method }}'' == ''xgit''  ]; then
                         git clone {{ $url }} kolla-kubernetes;
                       fi;
                       if [ ''x{{ $method }}'' == ''xtar''  ]; then
                         curl -o kolla-kubernetes.tar.gz {{ $url }};
                         tar -zxvf kolla-kubernetes.tar.gz;
                       fi;
                       pushd kolla-kubernetes;
                       tools/helm_prebuild_microservices.py;
                       tools/helm_build_microservices.py /helm-repo;
                       popd;
                       popd;
                       pushd /helm-repo;
                       helm repo index --url http://helm-repo:{{ $port }} /helm-repo;
                       popd;
                    fi;
              "],
              "volumeMounts": [
{{- if $persistent }}
                  {
                      "name": "helm-repo-persistent-storage",
                      "mountPath": "/helm-repo"
                  }
{{- end }}
              ]
          }
      ]'
    spec:
      nodeSelector:
          {{ $selectorKey }}: {{ $selectorValue | quote }}
      containers:
        - name: main
          image: "{{ $imageFull }}"
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 12 }}
{{- if  $persistent }}
            - mountPath: /helm-repo
              name: helm-repo-persistent-storage
{{- end }}
          env:
            - name: helm_port
              value: {{ $port | quote }}
            - name: helm_address
              value: {{ $address | quote }}
{{- include "common_env_vars" $env | indent 12 }}
          ports:
            - containerPort: {{ $port }}
              name: {{ $resourceName | trunc 15 | quote }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
{{- if $persistent }}
        - name: helm-repo-persistent-storage
          persistentVolumeClaim:
            claimName: {{ $pvcName }}
{{- end }}
{{- end }}
