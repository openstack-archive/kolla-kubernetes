{{- $searchPath := ":global.kolla.horizon.frontend.deployment:global.kolla.horizon.frontend.all:global.kolla.horizon.all:global.kolla.all" }}
{{- $imagePullPolicy := include "kolla_val_get_str" (dict "key" "image_pull_policy" "searchPath" $searchPath "Values" .Values ) }}
{{- $containerConfigDirectory := include "kolla_val_get_str" (dict "key" "container_config_directory" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorKey := include "kolla_val_get_str" (dict "key" "selector_key" "searchPath" $searchPath "Values" .Values ) }}
{{- $selectorValue := include "kolla_val_get_str" (dict "key" "selector_value" "searchPath" $searchPath "Values" .Values ) }}
{{- $replicas := include "kolla_val_get_str" (dict "key" "replicas" "searchPath" $searchPath "Values" .Values ) }}
{{- $port := include "kolla_val_get_str" (dict "key" "port" "searchPath" $searchPath "Values" .Values ) }}
{{- $resourceName := "horizon-frontend" }}
{{- $netHostTrue := false }}
{{- $podTypeBootstrap := false }}
{{- with $env := dict "netHostTrue" $netHostTrue "podTypeBootstrap" $podTypeBootstrap "resourceName" $resourceName "Values" .Values "Release" .Release "searchPath" $searchPath }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: horizon-frontend
spec:
  replicas: {{ $replicas }}
  selector:
      service: horizon-frontend
  template:
    metadata:
      labels:
        service: horizon-frontend
      annotations:
        kolla_upgrade: minor_rolling_safe
        pod.beta.kubernetes.io/init-containers: '[
{{- include "common_dependency_container_single" $env | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ $selectorKey }}: {{ $selectorValue | quote }}
      containers:
        - name: horizon-frontend
          image: {{ include "haproxy_image_full" . | quote }}
          imagePullPolicy: {{ $imagePullPolicy | quote }}
          volumeMounts:
{{- include "common_volume_mounts" $env | indent 10 }}
            - mountPath: {{ container_config_directory }}
              name: horizon-frontend-configmap
          env:
{{- include "common_env_vars" $env | indent 10 }}
          ports:
            - containerPort: {{ $port }}
              name: http
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - killall -s SIGUSR1 haproxy
          readinessProbe:
            httpGet:
              path: /
              port: {{ $port }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
{{- include "common_containers" $env | indent 6 }}
      volumes:
{{- include "common_volumes" $env | indent 8 }}
        - name: horizon-frontend-configmap
          configMap:
            name: horizon-frontend
            items:
            - key: config.json
              path: config.json
            - key: haproxy.cfg
              path: haproxy.cfg
{{- end }}
