{{- define "common_volume_mounts" }}
- mountPath: /var/log/kolla/
  name: kolla-logs
- mountPath: /etc/localtime
  name: host-etc-localtime
  readOnly: true
{{- if and .netHostTrue .Values.enable_resolve_conf_net_host_workaround }}
- mountPath: /etc/resolv.conf
  name: resolv-conf
  subPath: resolv.conf
{{- end }}
{{- end }}

{{- define "common_containers" }}
{{- if .Values.enable_kube_logger }}
- name: logging
  image: {{ include "fluentd_image_full" . | quote }}
  volumeMounts:
    - mountPath: {{ .Values.container_config_directory }}
      name: logging-config
{{- include "common_volume_mounts" . | indent 4 }}
  env:
    - name: KOLLA_CONFIG_STRATEGY
      value: COPY_ONCE
{{- end }}
{{- end }}

{{- define "common_volumes" }}
- name: host-etc-localtime
  hostPath:
    path: /etc/localtime
- name: kolla-logs
  emptyDir: {}
{{- $podTypeNotBootstrap := not .podTypeBootstrap }}
{{- if and .Values.enable_kube_logger $podTypeNotBootstrap }}
- name: logging-config
  configMap:
{{- $loggerConfigmapNameDefault := printf "%s-logging" .resourceName }}
    name: {{ .Values.logger_configmap_name | default $loggerConfigmapNameDefault }}
{{- end }}
{{- if and .netHostTrue .Values.enable_resolve_conf_net_host_workaround }}
- name: resolv-conf
  configMap:
    name: resolv-conf
{{- end }}
{{- end }}

{{- define "common_bootstrap_env_vars" }}
- name: KOLLA_KUBERNETES
  value: ""
- name: KOLLA_BOOTSTRAP
  value: ""
- name: KOLLA_CONFIG_STRATEGY
  value: COPY_ONCE
{{- end }}

{{- define "common_env_vars" }}
- name: KOLLA_KUBERNETES
  value: ""
- name: KOLLA_CONFIG_STRATEGY
  value: COPY_ONCE
{{- end }}

{{ /*
  Can be used for any container that requires outside network access.
  User must pass in values for http_proxy, https_proxy, and/or no_proxy.
  The template also supports an .extra_no_proxy value for internal services
  that are accessed by the container that need to bypass the proxy.
*/ }}
{{- define "common_proxy_vars" }}
{{- if .Values.http_proxy }}
- name: http_proxy
  value: {{ .Values.http_proxy }}
{{- end }}
{{- if .Values.https_proxy }}
- name: https_proxy
  value: {{ .Values.https_proxy }}
{{- end }}
{{- $noproxy := printf "%s,%s" .Values.no_proxy .extra_no_proxy | trimAll "," }}
{{- if $noproxy }}
- name: no_proxy
  value: {{ $noproxy }}
{{- end }}
{{- end }}
