apiVersion: v1
kind: ReplicationController
metadata:
   name: configmap-updater
   namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: configmap-monitor
        system: kube
    spec:
      containers:
        - image: docker.io/port/centos-binary-kolla-kube-toolbox:3.0.1
          name: configmap-monitor
          env:
            - name: COMPONENT_SELECTOR
              value: configmap-consumer
          command:
            - /bin/bash
            - -c
            - |
               original_version=$(kubectl get configmap main-process-configmap -o json | jq -r '.metadata.resourceVersion ')
               while true;
                 do
                    current_version=$(kubectl get configmap main-process-configmap -o json | jq -r '.metadata.resourceVersion ')
                    echo "Original version - $original_version, Current version - $current_version";
                    if [ $original_version != $current_version ]; then
                       original_version=$(kubectl get configmap main-process-configmap -o json | jq -r '.metadata.resourceVersion ')
                       echo 'Configmap got changed need to restart PODS';
                       kubectl get pods --selector="component=$COMPONENT_SELECTOR" -o name | xargs -l1 kubectl delete
                    fi;
                    sleep 10;
               done;
---
apiVersion: v1
data:
  config.json: |
    {
        "variable": "old"
    }
kind: ConfigMap
metadata:
  name: main-process-configmap
  namespace: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
   name: configmap-consumer
   namespace: default
spec:
  template:
    metadata:
      labels:
        component: configmap-consumer
        system: kube
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
          {
              "name": "copy-config",
              "image": "docker.io/port/centos-binary-kolla-kube-toolbox:3.0.1",
              "command": [
                  "/bin/sh",
                  "-c",
                  "cp -a /tmp/main-process-configmap/..data/* /tmp/pod-main-config/;"
              ],
              "volumeMounts": [
                  {
                      "name": "pod-main-config",
                      "mountPath": "/tmp/pod-main-config"
                  },
                  {
                      "name": "main-process-configmap",
                      "mountPath": "/tmp/main-process-configmap"
                  }
              ]
          }
        ]'
    spec:
      containers:
        - image: docker.io/port/centos-binary-kolla-kube-toolbox:3.0.1
          name: main
          command:
            - /bin/bash
            - -c
            - |
               config_value=$(cat /tmp/main-process-config/config.json | jq -r '.variable ');
               while true;
                 do
                    echo $config_value;
                    sleep 10;
               done;
          volumeMounts:
            - mountPath: /tmp/main-process-config
              name: pod-main-config
      volumes:
        - name: pod-main-config
          emptyDir: {}
        - name: main-process-configmap
          configMap:
            name: main-process-configmap
