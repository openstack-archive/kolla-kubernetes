{%- set resourceName = kolla_kubernetes.cli.args.resource_name %}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: horizon
   namespace: {{ kolla_kubernetes_namespace }}
spec:
  replicas: {{ horizon_replicas }}
  strategy:
  template:
    metadata:
      labels:
        service: horizon
        type: api
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
              "name": "update-config",
              "image": "{{ kolla_toolbox_image_full }}",
              "command": [
                  "/bin/sh",
                  "-c",
                  "cp -a /srv/configmap/..data/* /srv/pod-main-config/;
                   sed -i ''s|^Listen.*=.*|Listen=127.0.0.1:8080''\"|g'' /srv/pod-main-config/horizon.conf;
                   sed -i ''s|^<VirtualHost.*=.*|<VirtualHost  *:8080>''\"|g'' /srv/pod-main-config/horizon.conf;
              ],
              "volumeMounts": [
                  {
                      "name": "horizon-configmap",
                      "mountPath": "/srv/configmap"
                  },
                  {
                      "name": "pod-main-config",
                      "mountPath": "/srv/pod-main-config"
                  }
              ]
          }
      ]'
    spec:
#You've got 2 days to drain or figure out why it won't.
      terminationGracePeriodSeconds: {{ 2 * 24 * 60 * 60 }}
      nodeSelector:
{%- set selector = kolla_kubernetes_hostlabel_horizon |
                       default(kolla_kubernetes_hostlabel_controller)
%}
          {{ selector.key }}: {{ selector.value }}
      containers:
        - name: haproxy
          image: "{{ haproxy_image_full }}"
          command:
          - /bin/bash
          - -c
          - |
            kolla_start;
            touch /var/lib/kolla-kubernetes/event/shutdown;
          readinessProbe:
            httpGet:
              path: /
              port: 80 
            initialDelaySeconds: 5
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
#FIXME move script into haproxy container
#NOTE this only works if you arn't doing a haproxy reconfigure too.
#But shouldn't ever have to do that in a setup like this.
                command:
                - /bin/bash
                - -c
                - |
                  kill -USR1 $(</var/run/haproxy.pid);
                  while true; do sleep 1000; done
          volumeMounts:
            - mountPath: /var/lib/kolla-kubernetes/event
              name: kolla-kubernetes-events
            - mountPath: {{ container_config_directory }}
              name: horizon-haproxy-config
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: etc-localtime
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: {{ config_strategy }}
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
        - name: main
          image: "{{ horizon_image_full }}"
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - while true; do sleep 1; [ -f /var/lib/kolla-kubernetes/event/shutdown ] && break; done
          volumeMounts:
            - mountPath: /var/lib/kolla-kubernetes/event
              name: kolla-kubernetes-events
            - mountPath: {{ container_config_directory }}
              name: pod-main-config
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: etc-localtime
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: {{ config_strategy }}
      volumes:
        - name: kolla-kubernetes-events
          emptyDir: {}
        - name: pod-main-config
          emptyDir: {}
        - name: horizon-configmap
          configMap:
            name: horizon
            - key: horizon.conf
              path: horizon.conf
            - key: config.json
              path: config.json
            - key: local-settings
              path: local_settings
        - name: horizon-haproxy-config
          configMap:
            name: horizon-haproxy
        - name: etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
