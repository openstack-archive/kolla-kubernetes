---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    recurse: yes
  when:
    - item.value.enabled | bool
  with_dict: "{{ heat_services }}"

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
  when:
    - item.value.enabled | bool
  with_dict: "{{ heat_services }}"

- name: Copying over the heat-engine environment file
  template:
    src: "_deprecated.yaml"
    dest: "{{ node_config_directory }}/{{ item }}/_deprecated.yaml"
  with_items:
    - "heat-engine"

- name: Copying over api-paste.ini file for service heat-api
  template:
    src: "api-paste.ini"
    dest: "{{ node_config_directory }}/{{ item }}/api-paste.ini"
  with_items:
    - "heat-api"

- name: Copying over api-paste.ini file for service heat-api-cfn
  template:
    src: "api-paste.ini"
    dest: "{{ node_config_directory }}/{{ item }}/api-paste.ini"
  with_items:
    - "heat-api-cfn"

- name: Copying over AWS_CloudWatch_Alarm file for service heat-api-cfn
  template:
    src: "AWS_CloudWatch_Alarm.yaml"
    dest: "{{ node_config_directory }}/{{ item }}/AWS_CloudWatch_Alarm.yaml"
  with_items:
    - "heat-api-cfn"

- name: Copying over AWS_RDS_DBInstance file for service heat-api-cfn
  template:
    src: "AWS_RDS_DBInstance.yaml"
    dest: "{{ node_config_directory }}/{{ item }}/AWS_RDS_DBInstance.yaml"
  with_items:
    - "heat-api-cfn"

- name: Copying over heat.conf
  merge_configs:
    vars:
      service_name: "{{ item.key }}"
    sources:
      - "{{ role_path }}/templates/heat.conf.j2"
      - "{{ node_custom_config }}/global.conf"
      - "{{ node_custom_config }}/database.conf"
      - "{{ node_custom_config }}/messaging.conf"
      - "{{ node_custom_config }}/heat.conf"
      - "{{ node_custom_config }}/heat/{{ item.key }}.conf"
      - "{{ node_custom_config }}/heat/{{ inventory_hostname }}/heat.conf"
    dest: "{{ node_config_directory }}/{{ item.key }}/heat.conf"
  register: heat_confs
  when:
    - item.value.enabled | bool
  with_dict: "{{ heat_services }}"

- name: Check if policies shall be overwritten
  local_action: stat path="{{ node_custom_config }}/heat/policy.json"
  register: heat_policy

- name: Copying over existing policy.json
  template:
    src: "{{ node_custom_config }}/heat/policy.json"
    dest: "{{ node_config_directory }}/{{ item.key }}/policy.json"
  register: heat_policy_jsons
  when:
    - heat_policy.stat.exists
  with_dict: "{{ heat_services }}"
