---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item.key }}/config"
    state: "directory"
    recurse: yes
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ telegraf_services }}"

- name: Copying over default config.json files
  template:
    src: "telegraf.json.j2"
    dest: "{{ node_config_directory }}/telegraf/config.json"
  register: telegraf_config_jsons
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ telegraf_services }}"
  notify:
    - Restart telegraf container

- name: Copying over telegraf config file
  vars:
    service: "{{ telegraf_services['telegraf'] }}"
  template:
    src: "telegraf.conf.j2"
    dest: "{{ node_config_directory }}/telegraf/telegraf.conf"
  register: telegraf_confs
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart telegraf container

- name: Copying over telegraf plugin files
  vars:
    service: "{{ telegraf_services['telegraf'] }}"
  copy:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/telegraf/config"
  register: telegraf_plugin
  when:
    - inventory_hostname in groups[service.group]
    - item.value.enabled | bool
  with_fileglob:
    - "{{ role_path }}/templates/config/*.conf"
  notify:
    - Restart telegraf container

- name: Check telegraf containers
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    volumes: "{{ item.value.volumes }}"
  register: check_telegraf_containers
  when:
    - action != "config"
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ telegraf_services }}"
  notify:
    - Restart telegraf container
